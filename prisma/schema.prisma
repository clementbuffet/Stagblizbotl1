generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  dares         Dare[]
  participations DareParticipation[]
  walletAddress String?
  tokenBalance  Float     @default(0)
}

model Dare {
  id          String    @id @default(cuid())
  title       String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  startDate   DateTime
  endDate     DateTime
  creatorId   String
  creator     User      @relation(fields: [creatorId], references: [id])
  status      String    @default("ACTIVE") // ACTIVE, COMPLETED, CANCELLED
  type        String    // SOLO, TEAM, BATTLE
  reward      Float
  participants DareParticipation[]
}

model DareParticipation {
  id        String   @id @default(cuid())
  dareId    String
  userId    String
  dare      Dare     @relation(fields: [dareId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  status    String   @default("JOINED") // JOINED, COMPLETED, VERIFIED
  proofUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([dareId, userId])
}